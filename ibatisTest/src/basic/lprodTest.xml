<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
	<sqlMap namespace="lprodTest">
		<!-- 200309
			이 영역에 처리할 sql문에 맞는 태그를 사요하여 sql문을 기술한다. 
			( 사용할 수 있는 태그들 )
			<select> ~ </select>
			<insert> ~ </insert>
			<update> ~ </update>
			<delete> ~ </delete>
			등등....
		 -->
		 
		 <!-- 
		 	id : 해당 태그를 호출할 때 사용되는 이름이다.
		 		   - java 프로그램에서 호출할 때는 위의 sqlMap태그의 namespace속성값과   호출할 태그의 id속성값을 붙여서 호출한다. 
			 	  	 예) lprodTest.insertLprod ==> namespace속성값.호출할태그의id속성값
		 	parameterClass속성 : SQL문에 사용할 데이터가 들어있는 객체를 지정한다. 
		 					   (보통 VO클래스, JAVA의 컬렉션이름 등이 사용된다.)
		 -->
		 <insert id="insertLprod" parameterClass="basic.LprodVO">
		 	insert into lprod (lprod_id, lprod_gu, lprod_nm)
		 	values (#lprod_id#,#lprod_gu#,#lprod_nm#)
		 </insert>
		 
		 <update id="updateLprod" parameterClass ="basic.LprodVO">
		 	update lprod set lprod_id = #lprod_id#, lprod_nm = #lprod_nm# where lprod_gu = #lprod_gu#
		 </update>
		 <!-- 
		 	parameterClass 에 설정되는 값이 단일값이면 sql문에 이 값을 나타내는 변수의 이름을 사용자가 임의로 지정할 수 있당.
		  -->
		 <delete id="deleteLprod" parameterClass ="String">
		 	<!--  delete from lprod where lprod_gu = #lprod_gu# -->
		 	delete from lprod where lprod_gu = #dfdfdf#
		 </delete>
		 
		 <!-- resultClass : select문을 처리한 결과를 저장할 클래스를 지정한다. 
		 	(일반적으로 , VO클래스나 자바의 자료형 이름 또는 컬렉션이름을 지장한다. ) -->
		 <select id="getAllLprod" resultClass="basic.LprodVO">
		 	select * from lprod
		 </select>
		 
		 
		 <!-- parameterClass속성값과 resultClass 속성값에 VO객체를 지정할때 전체이름 대신 alias를 사요할수 잇다.  -->
		 
		 <!-- 조건이 있는 select문 -->
		 <!-- <select id="getLprod" parameterClass ="String" resultClass="basic.LprodVO">-->
		 <select id="getLprod" parameterClass ="String" resultClass="lpVO">
		 	select * from lprod where lprod_gu = #lprod_gu#
		 </select>
		 
	</sqlMap>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	